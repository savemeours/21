local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local VirtualInputManager = nil
pcall(function() VirtualInputManager = game:GetService("VirtualInputManager") end)
local VirtualUser = nil
pcall(function() VirtualUser = game:GetService("VirtualUser") end)

local LocalPlayer = Players.LocalPlayer

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "CardCounterPro"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 280, 0, 200)
Frame.Position = UDim2.new(0.5, -140, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 10)

local UIStroke = Instance.new("UIStroke", Frame)
UIStroke.Thickness = 2
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Color = Color3.fromRGB(60, 60, 60)

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -60, 0, 35)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Card Counter Pro"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Frame

local AutoButton = Instance.new("TextButton")
AutoButton.Size = UDim2.new(0, 28, 0, 28)
AutoButton.Position = UDim2.new(1, -65, 0, 4)
AutoButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoButton.Text = "A"
AutoButton.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoButton.Font = Enum.Font.GothamBold
AutoButton.TextSize = 18
AutoButton.Parent = Frame
Instance.new("UICorner", AutoButton).CornerRadius = UDim.new(0, 8)

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 28, 0, 28)
CloseButton.Position = UDim2.new(1, -32, 0, 4)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 18
CloseButton.Parent = Frame
Instance.new("UICorner", CloseButton).CornerRadius = UDim.new(0, 8)

CloseButton.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
	if script then script:Destroy() end
end)

local Recommendation = Instance.new("TextLabel")
Recommendation.Size = UDim2.new(1, -20, 0, 40)
Recommendation.Position = UDim2.new(0, 10, 0, 40)
Recommendation.BackgroundTransparency = 1
Recommendation.Font = Enum.Font.GothamBold
Recommendation.TextSize = 28
Recommendation.TextColor3 = Color3.fromRGB(255, 255, 255)
Recommendation.Parent = Frame

local InfoLabel = Instance.new("TextLabel")
InfoLabel.Size = UDim2.new(1, -20, 1, -90)
InfoLabel.Position = UDim2.new(0, 10, 0, 85)
InfoLabel.BackgroundTransparency = 1
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.TextSize = 16
InfoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
InfoLabel.TextXAlignment = Enum.TextXAlignment.Left
InfoLabel.TextYAlignment = Enum.TextYAlignment.Top
InfoLabel.TextWrapped = true
InfoLabel.RichText = true
InfoLabel.Parent = Frame

local StatusBar = Instance.new("Frame")
StatusBar.Size = UDim2.new(1, 0, 0, 6)
StatusBar.Position = UDim2.new(0, 0, 1, -6)
StatusBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
StatusBar.Parent = Frame
Instance.new("UICorner", StatusBar).CornerRadius = UDim.new(1, 0)

local StatusFill = Instance.new("Frame")
StatusFill.Size = UDim2.new(0, 0, 1, 0)
StatusFill.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
StatusFill.Parent = StatusBar
Instance.new("UICorner", StatusFill).CornerRadius = UDim.new(1, 0)

local AutoOn, AutoLoopThread = false, nil
local AutoAvailable = (VirtualInputManager ~= nil) or (VirtualUser ~= nil)

local function setAutoAppearance(on)
	if on then
		AutoButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
		AutoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		StatusFill:TweenSize(UDim2.new(1, 0, 1, 0), "Out", "Sine", 0.4, true)
	else
		AutoButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		AutoButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		StatusFill:TweenSize(UDim2.new(0, 0, 1, 0), "Out", "Sine", 0.4, true)
	end
end

local function doClick(btn)
	local camera = workspace.CurrentCamera
	if not camera then return end
	local vx, vy = camera.ViewportSize.X/2, camera.ViewportSize.Y/2
	if VirtualInputManager then
		VirtualInputManager:SendMouseButtonEvent(vx, vy, btn, true, game, 1)
		task.wait(0.02)
		VirtualInputManager:SendMouseButtonEvent(vx, vy, btn, false, game, 1)
	elseif VirtualUser then
		VirtualUser:CaptureController()
		if btn == 0 then
			VirtualUser:Button1Down(Vector2.new(vx, vy))
			task.wait(0.02)
			VirtualUser:Button1Up(Vector2.new(vx, vy))
		elseif btn == 1 and VirtualUser.Button2Down then
			VirtualUser:Button2Down(Vector2.new(vx, vy))
			task.wait(0.02)
			VirtualUser:Button2Up(Vector2.new(vx, vy))
		end
	end
end

local function startAutoLoop()
	if AutoLoopThread then return end
	AutoLoopThread = task.spawn(function()
		while AutoOn and ScreenGui.Parent do
			local rec = (Recommendation.Text or ""):upper()
			if rec:find("TAKE") then
				doClick(0)
				task.wait(0.1)
				doClick(0)
			elseif rec:find("HOLD") then
				doClick(1)
				task.wait(0.1)
				doClick(1)
			end
			task.wait(1)
		end
		AutoLoopThread = nil
	end)
end

local function stopAutoLoop()
	AutoOn = false
end

AutoButton.MouseButton1Click:Connect(function()
	if not AutoAvailable then
		InfoLabel.Text = (InfoLabel.Text or "") .. "\n[Auto] Unsupported click method."
		return
	end
	AutoOn = not AutoOn
	setAutoAppearance(AutoOn)
	if AutoOn then startAutoLoop() else stopAutoLoop() end
end)

local function updateAdvisor()
	local cardsContainer = workspace.Room and workspace.Room:FindFirstChild("Cards")
	local opponentRoot = workspace.Room and workspace.Room.Opponent and workspace.Room.Opponent:FindFirstChild("HumanoidRootPart")
	local myCamera = workspace.Room and workspace.Room:FindFirstChild("Camera")

	local goalValue
	do
		local sumLabel = workspace.Room
			and workspace.Room.Main
			and workspace.Room.Main:FindFirstChild("YourCardsSum")
			and workspace.Room.Main.YourCardsSum:FindFirstChild("SurfaceGui")
			and workspace.Room.Main.YourCardsSum.SurfaceGui:FindFirstChild("TextLabel")
		if sumLabel and sumLabel:IsA("TextLabel") then
			goalValue = tonumber((sumLabel.Text or ""):match("%d+/(%d+)"))
		end
	end

	if not (cardsContainer and opponentRoot and myCamera and goalValue) then
		Recommendation.Text = "Waiting..."
		Recommendation.TextColor3 = Color3.fromRGB(255, 255, 0)
		InfoLabel.Text = "Waiting for game data..."
		return
	end

	local myCards, opponentCards = {}, {}
	for _, obj in ipairs(cardsContainer:GetChildren()) do
		if obj.Name == "Card" and obj:IsA("BasePart") then
			local scoreLabel = obj:FindFirstChild("Score") and obj.Score:FindFirstChild("TextLabel")
			local faceValue = scoreLabel and scoreLabel.Text or "[Hidden]"
			local distToOpponent = (obj.Position - opponentRoot.Position).Magnitude
			local distToMe = (obj.Position - myCamera.Position).Magnitude
			local owner = (distToOpponent < distToMe) and "Opponent" or "Me"
			if owner == "Me" then table.insert(myCards, faceValue) else table.insert(opponentCards, faceValue) end
		end
	end

	local function cardValue(v)
		if v == "L" then return 99 end
		return tonumber(v)
	end

	local mySum, oppKnownSum, oppHiddenCount = 0, 0, 0
	for _, v in ipairs(myCards) do local n = cardValue(v) if n then mySum += n end end
	for _, v in ipairs(opponentCards) do
		local n = cardValue(v)
		if n then oppKnownSum += n else oppHiddenCount += 1 end
	end

	local deck = {1,2,3,4,5,6,7,8,9,10,11}
	local visibleCards = {}
	for _, v in ipairs(myCards) do local n = tonumber(v) if n then table.insert(visibleCards, n) end end
	for _, v in ipairs(opponentCards) do local n = tonumber(v) if n then table.insert(visibleCards, n) end end
	for _, c in ipairs(visibleCards) do for i, d in ipairs(deck) do if d == c then table.remove(deck, i) break end end end

	local safeDraws, bustDraws = 0, 0
	for _, value in ipairs(deck) do if mySum+value <= goalValue then safeDraws += 1 else bustDraws += 1 end end
	local totalRemaining = safeDraws + bustDraws
	local safeChance = (totalRemaining > 0) and (safeDraws / totalRemaining) or 0
	local sumOfDeck, oppExpectedSum = 0, 0
	for _, v in ipairs(deck) do sumOfDeck += v end
	local avgDeckValue = (totalRemaining > 0) and (sumOfDeck / totalRemaining) or 0
	oppExpectedSum = oppKnownSum + (oppHiddenCount * avgDeckValue)

	local pointsNeeded = goalValue - mySum
	local opponentBust = oppKnownSum > goalValue

	local requiredSafeChance = 0.50
	local opponentAdvantage = math.max(0, oppExpectedSum - mySum)
	requiredSafeChance = math.max(0.40, requiredSafeChance - (opponentAdvantage * 0.05))

	if opponentBust or ((1 - safeChance) >= 0.5 and oppExpectedSum <= mySum) then
		Recommendation.Text = "HOLD"
		Recommendation.TextColor3 = Color3.fromRGB(200, 50, 50)
	elseif safeChance >= requiredSafeChance then
		Recommendation.Text = "TAKE"
		Recommendation.TextColor3 = Color3.fromRGB(50, 200, 50)
	else
		Recommendation.Text = "HOLD"
		Recommendation.TextColor3 = Color3.fromRGB(200, 50, 50)
	end

	local deckText = ""
	for i, card in ipairs(deck) do
		local color = (mySum + card <= goalValue) and "<font color='#32C820'>" or "<font color='#C83220'>"
		deckText = deckText .. color .. card .. "</font>" .. ((i < #deck) and ", " or "")
	end

	InfoLabel.Text = string.format(
		"Safe Chance: %.1f%%\nNeeded: %d\nOpponent Exp: %.1f\nRemaining: %s",
		safeChance*100,
		pointsNeeded,
		oppExpectedSum,
		deckText
	)
end

RunService.RenderStepped:Connect(updateAdvisor)
