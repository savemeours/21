local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer") and Players.LocalPlayer
if not LocalPlayer then
	repeat
		task.wait()
		LocalPlayer = Players.LocalPlayer
	until LocalPlayer
end

local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local function Create(class, props)
	local obj = Instance.new(class)
	if props then
		for k, v in pairs(props) do
			obj[k] = v
		end
	end
	return obj
end

local screenGui = Create("ScreenGui", {Name = "CardAdvisorUI", ResetOnSpawn = false, Parent = PlayerGui, ZIndexBehavior = Enum.ZIndexBehavior.Sibling})

local mainFrame = Create("Frame", {
	Size = UDim2.new(0, 360, 0, 200),
	Position = UDim2.new(0.5, -180, 0.18, 0),
	AnchorPoint = Vector2.new(0.5, 0),
	BackgroundColor3 = Color3.fromRGB(24, 26, 28),
	BorderSizePixel = 0,
	Parent = screenGui,
	Active = true
})

local corner = Create("UICorner", {CornerRadius = UDim.new(0, 12), Parent = mainFrame})
local stroke = Create("UIStroke", {Thickness = 1, ApplyStrokeMode = Enum.ApplyStrokeMode.Border, Color = Color3.fromRGB(40,40,40), Parent = mainFrame})
local gradient = Create("UIGradient", {Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(26,28,31)), ColorSequenceKeypoint.new(1, Color3.fromRGB(34,36,38))}, Rotation = 90, Parent = mainFrame})

local topBar = Create("Frame", {Size = UDim2.new(1, 0, 0, 40), Position = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1, Parent = mainFrame})
Create("UICorner", {CornerRadius = UDim.new(0, 12), Parent = topBar})

local title = Create("TextLabel", {
	Parent = topBar,
	Size = UDim2.new(0.6, -12, 1, 0),
	Position = UDim2.new(0, 12, 0, 0),
	BackgroundTransparency = 1,
	Font = Enum.Font.GothamSemibold,
	TextSize = 18,
	Text = "Card Advisor",
	TextColor3 = Color3.fromRGB(240,240,240),
	TextXAlignment = Enum.TextXAlignment.Left
})

local statusBadge = Create("TextLabel", {
	Parent = topBar,
	Size = UDim2.new(0.35, -16, 0.7, 0),
	Position = UDim2.new(0.65, 8, 0.15, 0),
	BackgroundTransparency = 0,
	BackgroundColor3 = Color3.fromRGB(36, 160, 81),
	Font = Enum.Font.GothamBold,
	TextSize = 14,
	Text = "READY",
	TextColor3 = Color3.fromRGB(255,255,255),
	TextScaled = false
})
Create("UICorner", {CornerRadius = UDim.new(0, 8), Parent = statusBadge})
Create("UIStroke", {Thickness = 1, Color = Color3.fromRGB(25,120,60), Parent = statusBadge})

local closeBtn = Create("TextButton", {
	Parent = topBar,
	Size = UDim2.new(0, 28, 0, 28),
	Position = UDim2.new(1, -38, 0.1, 0),
	BackgroundColor3 = Color3.fromRGB(200, 58, 58),
	Text = "âœ•",
	Font = Enum.Font.GothamSemibold,
	TextSize = 16,
	TextColor3 = Color3.fromRGB(255,255,255)
})
Create("UICorner", {CornerRadius = UDim.new(0, 8), Parent = closeBtn})
closeBtn.MouseButton1Click:Connect(function()
	screenGui:Destroy()
end)

local lockBtn = Create("TextButton", {
	Parent = topBar,
	Size = UDim2.new(0, 28, 0, 28),
	Position = UDim2.new(1, -74, 0.1, 0),
	BackgroundColor3 = Color3.fromRGB(60,60,60),
	Text = "ðŸ”’",
	Font = Enum.Font.GothamBold,
	TextSize = 14,
	TextColor3 = Color3.fromRGB(220,220,220)
})
Create("UICorner", {CornerRadius = UDim.new(0,8), Parent = lockBtn})

local compactBtn = Create("TextButton", {
	Parent = topBar,
	Size = UDim2.new(0, 28, 0, 28),
	Position = UDim2.new(1, -110, 0.1, 0),
	BackgroundColor3 = Color3.fromRGB(60,60,60),
	Text = "âˆ’",
	Font = Enum.Font.GothamBold,
	TextSize = 18,
	TextColor3 = Color3.fromRGB(220,220,220)
})
Create("UICorner", {CornerRadius = UDim.new(0,8), Parent = compactBtn})

local content = Create("Frame", {Parent = mainFrame, Size = UDim2.new(1, -20, 1, -60), Position = UDim2.new(0, 10, 0, 50), BackgroundTransparency = 1})
local grid = Create("UIGridLayout", {Parent = content, CellSize = UDim2.new(0.5, -10, 0.5, -10), CellPadding = UDim2.new(0, 8, 0, 8), FillDirection = Enum.FillDirection.Vertical, HorizontalAlignment = Enum.HorizontalAlignment.Left})

local function makeStat(titleText)
	local card = Create("Frame", {Parent = content, BackgroundColor3 = Color3.fromRGB(20,20,20), BorderSizePixel = 0})
	Create("UICorner", {CornerRadius = UDim.new(0,10), Parent = card})
	Create("UIStroke", {Thickness = 1, Color = Color3.fromRGB(40,40,40), Parent = card})
	local labelTitle = Create("TextLabel", {Parent = card, Size = UDim2.new(1, -12, 0, 20), Position = UDim2.new(0, 8, 0, 6), BackgroundTransparency = 1, Font = Enum.Font.GothamBold, Text = titleText, TextSize = 13, TextColor3 = Color3.fromRGB(190,190,190), TextXAlignment = Enum.TextXAlignment.Left})
	local labelValue = Create("TextLabel", {Parent = card, Size = UDim2.new(1, -12, 0, 40), Position = UDim2.new(0, 8, 0, 28), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = "-", TextSize = 24, TextColor3 = Color3.fromRGB(240,240,240), TextXAlignment = Enum.TextXAlignment.Left})
	return card, labelTitle, labelValue
end

local sumCard, sumTitle, sumValue = makeStat("Total Saya")
local needCard, needTitle, needValue = makeStat("Poin Tersisa")
local safeCard, safeTitle, safeValue = makeStat("Peluang Aman")
local oppCard, oppTitle, oppValue = makeStat("Ekspektasi Lawan")

local details = Create("TextLabel", {Parent = mainFrame, Size = UDim2.new(1, -24, 0, 42), Position = UDim2.new(0, 12, 1, -50), BackgroundTransparency = 1, Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = Color3.fromRGB(200,200,200), Text = "Kartu tersisa: -", TextXAlignment = Enum.TextXAlignment.Left, TextYAlignment = Enum.TextYAlignment.Top, RichText = true})

local theme = "dark"
local locked = false
local compact = false

local dragging = false
local dragStart, startPos

topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if not locked then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end
end)

topBar.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

lockBtn.MouseButton1Click:Connect(function()
	locked = not locked
	lockBtn.Text = locked and "ðŸ”“" or "ðŸ”’"
	local t = TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(lockBtn, t, {Rotation = locked and 10 or 0}):Play()
end)

compactBtn.MouseButton1Click:Connect(function()
	compact = not compact
	if compact then
		mainFrame.Size = UDim2.new(0, 260, 0, 110)
		content.Visible = false
		details.Visible = false
		compactBtn.Text = "+"
	else
		mainFrame.Size = UDim2.new(0, 360, 0, 200)
		content.Visible = true
		details.Visible = true
		compactBtn.Text = "âˆ’"
	end
end)

local function setTheme(t)
	theme = t
	if theme == "light" then
		mainFrame.BackgroundColor3 = Color3.fromRGB(245,245,245)
		title.TextColor3 = Color3.fromRGB(28,28,28)
		sumValue.TextColor3 = Color3.fromRGB(18,18,18)
		details.TextColor3 = Color3.fromRGB(60,60,60)
		statusBadge.BackgroundColor3 = Color3.fromRGB(30,130,76)
	else
		mainFrame.BackgroundColor3 = Color3.fromRGB(24,26,28)
		title.TextColor3 = Color3.fromRGB(240,240,240)
		sumValue.TextColor3 = Color3.fromRGB(240,240,240)
		details.TextColor3 = Color3.fromRGB(200,200,200)
		statusBadge.BackgroundColor3 = Color3.fromRGB(36,160,81)
	end
end

local themeBtn = Create("TextButton", {
	Parent = topBar,
	Size = UDim2.new(0, 28, 0, 28),
	Position = UDim2.new(1, -146, 0.1, 0),
	BackgroundColor3 = Color3.fromRGB(60,60,60),
	Text = "â˜¼",
	Font = Enum.Font.GothamBold,
	TextSize = 14,
	TextColor3 = Color3.fromRGB(220,220,220)
})
Create("UICorner", {CornerRadius = UDim.new(0,8), Parent = themeBtn})
themeBtn.MouseButton1Click:Connect(function()
	setTheme(theme == "dark" and "light" or "dark")
end)

local lastUpdate = 0
local updateInterval = 0.12

local function safeNumber(n)
	if type(n) ~= "number" then return 0 end
	if n ~= n then return 0 end
	return n
end

local function parseCardValue(v)
	if not v then return nil end
	if type(v) == "string" then
		local trimmed = v:match("^%s*(.-)%s*$")
		if trimmed == "L" or trimmed == "J" or trimmed == "X" then
			return 99
		end
		local num = tonumber(trimmed)
		return num
	end
	if typeof(v) == "number" then return v end
	return nil
end

local function getGameObjects()
	local room = workspace:FindFirstChild("Room")
	if not room then return nil end
	local cardsContainer = room:FindFirstChild("Cards")
	local opponent = room:FindFirstChild("Opponent")
	local main = room:FindFirstChild("Main")
	local cameraObj = room:FindFirstChild("Camera") or workspace.CurrentCamera
	return {
		room = room,
		cards = cardsContainer,
		opponent = opponent,
		main = main,
		camera = cameraObj
	}
end

local function computeAdvisor()
	local objs = getGameObjects()
	if not objs or not objs.room or not objs.cards or not objs.opponent or not objs.main or not objs.camera then
		return nil
	end

	local myCamera = objs.camera
	local opponentRoot = objs.opponent:FindFirstChild("HumanoidRootPart")
	if not opponentRoot then return nil end

	local sumLabel
	local sumUi = objs.main:FindFirstChild("YourCardsSum")
	if sumUi then
		local surf = sumUi:FindFirstChildWhichIsA("SurfaceGui") or sumUi:FindFirstChild("SurfaceGui")
		if surf then
			sumLabel = surf:FindFirstChild("TextLabel")
		else
			sumLabel = sumUi:FindFirstChild("TextLabel")
		end
	end

	local goalValue
	if sumLabel and sumLabel:IsA("TextLabel") then
		local found = (sumLabel.Text or ""):match("(%d+)%s*/%s*(%d+)")
		if found then
			local _,goal = (sumLabel.Text or ""):match("(%d+)%s*/%s*(%d+)")
			goalValue = tonumber(goal)
		else
			local _,g = (sumLabel.Text or ""):match("%d+/%s*(%d+)")
			goalValue = tonumber(g)
		end
	end

	if not goalValue then
		local fallback = objs.main:FindFirstChild("Goal") or objs.main:FindFirstChild("Target")
		if fallback and fallback:IsA("IntValue") then
			goalValue = fallback.Value
		end
	end

	if not goalValue then return nil end

	local myCards, oppCards = {}, {}
	for _, obj in ipairs(objs.cards:GetChildren()) do
		if obj.Name == "Card" and obj:IsA("BasePart") then
			local scoreLabel = obj:FindFirstChild("Score") and obj.Score:FindFirstChildWhichIsA("TextLabel")
			local face = scoreLabel and scoreLabel.Text or nil
			local distToOpp = (obj.Position - opponentRoot.Position).Magnitude
			local distToCam = (obj.Position - myCamera.Position).Magnitude
			local owner = (distToOpp < distToCam) and "Opponent" or "Me"
			if owner == "Me" then
				table.insert(myCards, face)
			else
				table.insert(oppCards, face)
			end
		end
	end

	local function valueOrHidden(x)
		local v = parseCardValue(x)
		if v then return v end
		return nil
	end

	local mySum = 0
	for _, v in ipairs(myCards) do
		local n = valueOrHidden(v)
		if n then mySum = mySum + n end
	end

	local oppKnownSum, oppHiddenCount = 0, 0
	for _, v in ipairs(oppCards) do
		local n = valueOrHidden(v)
		if n then
			oppKnownSum = oppKnownSum + n
		else
			oppHiddenCount = oppHiddenCount + 1
		end
	end

	local deck = {1,2,3,4,5,6,7,8,9,10,11}
	local visible = {}
	for _, v in ipairs(myCards) do
		local n = tonumber(v)
		if n then table.insert(visible, n) end
	end
	for _, v in ipairs(oppCards) do
		local n = tonumber(v)
		if n then table.insert(visible, n) end
	end
	for _, val in ipairs(visible) do
		for i = #deck,1,-1 do
			if deck[i] == val then
				table.remove(deck, i)
				break
			end
		end
	end

	local safeDraws, bustDraws = 0, 0
	for _, value in ipairs(deck) do
		if mySum + value <= goalValue then
			safeDraws = safeDraws + 1
		else
			bustDraws = bustDraws + 1
		end
	end
	local totalRemaining = safeDraws + bustDraws
	local safeChance = (totalRemaining > 0) and (safeDraws / totalRemaining) or 0

	local sumDeck = 0
	for _, v in ipairs(deck) do sumDeck = sumDeck + v end
	local avgDeckValue = (totalRemaining > 0) and (sumDeck / totalRemaining) or 0
	local oppExpected = oppKnownSum + (oppHiddenCount * avgDeckValue)

	local pointsNeeded = goalValue - mySum
	local opponentBust = oppKnownSum > goalValue

	return {
		mySum = safeNumber(mySum),
		pointsNeeded = pointsNeeded,
		safeChance = safeChance,
		oppExpected = oppExpected,
		deck = deck,
		oppBust = opponentBust,
		totalRemaining = totalRemaining,
		safeDraws = safeDraws,
		bustDraws = bustDraws,
		oppHiddenCount = oppHiddenCount,
		goalValue = goalValue
	}
end

local function formatPercent(n)
	return string.format("%.1f%%", safeNumber(n * 100))
end

local function updateUI(data)
	if not data then
		statusBadge.Text = "WAITING"
		statusBadge.BackgroundColor3 = Color3.fromRGB(200,150,40)
		sumValue.Text = "-"
		needValue.Text = "-"
		safeValue.Text = "-"
		oppValue.Text = "-"
		details.Text = "Kartu tersisa: -"
		return
	end

	statusBadge.Text = "ACTIVE"
	statusBadge.BackgroundColor3 = Color3.fromRGB(36,160,81)

	sumValue.Text = tostring(data.mySum)
	needValue.Text = tostring(data.pointsNeeded >= 0 and data.pointsNeeded or 0)
	safeValue.Text = formatPercent(data.safeChance)
	oppValue.Text = string.format("%.1f", data.oppExpected)

	local deckText = {}
	for i, card in ipairs(data.deck) do
		local ok = (data.mySum + card <= data.goalValue)
		local part = ok and ("<font color=\"rgb(50,200,80)\">"..tostring(card).."</font>") or ("<font color=\"rgb(220,80,80)\">"..tostring(card).."</font>")
		table.insert(deckText, part)
	end
	details.Text = "Kartu tersisa: " .. (#data.deck > 0 and table.concat(deckText, ", ") or "-")
end

local function safeRender()
	local now = tick()
	if now - lastUpdate < updateInterval then return end
	lastUpdate = now
	local ok, data = pcall(computeAdvisor)
	if not ok or not data then
		updateUI(nil)
		return
	end
	updateUI(data)
end

RunService.RenderStepped:Connect(safeRender)

local keybindVisible = Enum.KeyCode.K
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == keybindVisible then
		screenGui.Enabled = not screenGui.Enabled
	end
end)

setTheme("dark")
